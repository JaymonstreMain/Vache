((((VOICI LES 3 CLASSES POUR LE TRUCS DES VACHES))))

    -------------------------->  AppJeuDesVache
public class AppJeuDeVache {
    public static void main(String[] args) {
        new JeuVache(3);
    }
}



________________________________________________________________________________________________________________________________________________________________________________





 -------------------------->  Utility
import java.util.Random;
import java.util.Scanner;

public class Utility {

    public static int getNombreAleatoireEntreBorne(int min, int max) {
        if (min >= max) {
            throw new IllegalArgumentException("max doit être plus grand que min");
        }

        Random r = new Random(); //Instaciation de la classe Random
        return r.nextInt((max - min) + 1) + min;
    }

    public static String lireString(String question) {
        Scanner sc;
        String reponse;

        sc = new Scanner(System.in);

        System.out.print(question);
        reponse = sc.nextLine();

        return reponse;
    }


    public static int lireInt(String question) {
        String reponse;
        int reponseInt;

        reponse = lireString(question);
        reponseInt = Integer.parseInt(reponse);

        return reponseInt;
    }
}








________________________________________________________________________________________________________________________________________________________________________________


-------------------------->JeuVache
public class JeuVache {
    //variable d'instance
    private Vache[] tabVache;

    public JeuVache(int nbVache) {
        tabVache = new Vache[nbVache];

        remplirTabVache();

        avancerVacheJusquALaFin();
    }


    private void remplirTabVache() {
        int x;
        int y;
        String nom;
        for (int i = 0; i < tabVache.length; i++) {
            y = 0;
            x = Utility.getNombreAleatoireEntreBorne(2, 98);
            nom = Utility.lireString("Donner le nom de la vache");

            tabVache[i] = new Vache(x, y, nom);
            System.out.println(tabVache[i]);
        }
    }

    public boolean avancerLesVaches() {
        boolean lesVachesOntAvancees = false;
        for (int i = 0; i < tabVache.length; i++) {
            if (tabVache[i].estDansLesLimites()) {
                tabVache[i].avancer();
                System.out.println(tabVache[i]);
                lesVachesOntAvancees = true;
            }
        }

        return lesVachesOntAvancees;
    }

    public void avancerVacheJusquALaFin(){
        boolean lesVachesOntAvances;
        do {
            lesVachesOntAvances =  avancerLesVaches();
        } while(lesVachesOntAvances);
    }

}





________________________________________________________________________________________________________________________________________________________________________________


vache du debut




public class Vache {
    //Constante de classe
    public static final int MAX_LONGUEUR_NOM = 10;
    public static final int MIN_Y = 0;
    public static final int MAX_Y = 100;
    //static appartient à la classe et nom à chaque instance
    //final ne peut plus être modifié : donc une constante.
    //les nom de vairable constant sont toujours écrit en majuscule.

    //variable de classe : cette variable est commune à la classe. Ça implique que toutes les instances vont aller à la même vitesse.
    private static int vitesse;

    //variables d'instance
    private int x;  //int est un type simple
    private int y;
    private String nom;

    //Constructeurs
    public Vache(int x, int y, int vitesse, String nom) {
        this.x = x;
        this.y = y;
        this.vitesse = vitesse;
        this.nom = nom;
    }

    //accesseurs et les mutateurs
    private int getX() {
        return x;
    }

    public int getY() {
        return y;
    }

    public int getVitesse() {
        return vitesse;
    }

    public boolean estDansLesLimites() {
        boolean estDansLesLimitesY;

        estDansLesLimitesY = Vache.MIN_Y <= y && y <= Vache.MAX_Y;

        return estDansLesLimitesY;
    }

    public void setVitesse(int vitesse) {
        this.vitesse = vitesse;
    }

    public String getNom() {
        return nom;
    }

    //avancer en y seulement
    public void avancer() {
        this.y += vitesse;
    }

    public void setNom(String nom) {
        String strDebut = nom.substring(0, Vache.MAX_LONGUEUR_NOM);
        this.nom = strDebut;
    }
}


